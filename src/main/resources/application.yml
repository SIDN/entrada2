entrada:
  parquet:
   file:
     # max Parquet filesize (mb)
     max-size: 256
  worker:
    # how long to sleep when no work (secs)
    sleep: 10
    # if worker time processing pcap > x min, it is marked as stalled
    stalled: 10
  schedule:
    # update reference data every x min
    updater: 60
    # check for stalled worker every x min
    liveness: 1
    # check for new iceberg data files to commit every x min
    iceberg-comitter: 1
     # check for files being stuck in served state every x min
    input-monitor: 1
  input:
    # if a input file takes > max-proc-time (min) to process, it is considered stuck/failed
    max-proc-time: 1
  security:
    token:
      admin: '94591089610224297274859827590711'
  privacy:
    enabled: false
  directory:
    pcap: 'pcap'
    reference: 'reference'
  s3:
    access-key: 'minio666'
    secret-key: 'minio666'
    region: 'eu-west-1'
    endpoint: 'http://localhost:9000'
    bucket: 'testbucket1'
  metrics:
    graphite:
      enabled: false
      host: entrada-mon.sidnlabs.nl
      port: 2003
      protocol: 'Plaintext'
      step: 60 # secs
      tags-as-prefix: 'prefix'
      prefix: 'entrada2-test'
    data:
      input:
	      - name: s3 input provider 1
	        access-key: 'minio666'
	        secret-key: 'minio666'
	        region: 'eu-west-1'
	        endpoint: 'http://localhost:9000'
	        bucket: 'test-input-bucket-1'
	      - name: s3 input provider 2
	        access-key: 'minio666'
	        secret-key: 'minio666'
	        region: 'eu-west-1'
	        endpoint: 'http://localhost:9000'
	        bucket: 'test-input-bucket-2'
	    output:
	      name: s3 output location
        access-key: 'minio666'
        secret-key: 'minio666'
        region: 'eu-west-1'
        endpoint: 'http://localhost:9000'
        bucket: 'test-output-bucket'
	    
	     
        
  
server:
 servlet:
   contextPath: '/api/v1'

spring:
 application: 
   name: 'entrada2'
 flyway:
   enabled: false
 cloud:
    bootstrap:
      enabled: false
    kubernetes:
      config:
        enabled: false
      enabled: false
      reload:
        enabled: false
    openfeign:
      client:
        config:
          default:
            connectTimeout: 10000
            readTimeout: 10000
            loggerLevel: basic
          workerClient:
            # add entrada2-controller-service.entrada.svc.cluster.local to /etc/hosts for testing
            url: 'http://entrada2-controller-service.entrada.svc.cluster.local:8091/api/v1'
            defaultRequestHeaders:
              'X-API-KEY': '${entrada.security.token.admin}'
            dismiss404: true
          maxmindClient:
            url: 'https://download.maxmind.com/app/geoip_download?suffix=tar.gz'
            dismiss404: false

#logging:
#  level:
#    root: DEBUG
   
logging:
  level:
    nl.sidn.entrada2.worker.client: DEBUG
 
iceberg:
  catalog:
    url: 'http://client4.sidnlabs.nl:8182'
    token: 'secret_token_change_me_fast'
  bucket: '${entrada.s3.bucket}'
  warehouse-dir: 'warehouse'
  endpoint: '${entrada.s3.endpoint}'
  access-key: '${entrada.s3.access-key}'
  secret-key: '${entrada.s3.secret-key}'
  compression: 'snappy'
  metadata:
    version:
      max: 50
  table:
    namespace: 'entrada2'
    name: 'dns'
    location: 's3://testbucket1/entrada2'
    sorting:
      enabled: false #sort increases resource usage on servers
  

#########################
#        Resolvers      #
#########################

# max size of the "IP address to resolver" match cache
# keep cache because checking IP address is expensive
# but must make sure not to use a giant cache and get out-of-memory error
resolver:
  match:
    cache:
      size: 10000
  google:
    hostname: 'locations.publicdns.goog.'
    timeout: 15
  opendns:
    url: 'https://umbrella.cisco.com/why-umbrella/global-network-and-traffic'
    timeout: 15
  cloudflare:
    url:
      v4: 'https://www.cloudflare.com/ips-v4'
      v6: 'https://www.cloudflare.com/ips-v6'
      timeout: 15
     

  
#########################
#      MaxMind GeoIP    #
#########################
maxmind:
 max-age: 24
 license:
   free:
   paid:
 country:
   free: 'GeoLite2-Country'
   paid: 'GeoIP2-Country'
 asn:
   free: 'GeoLite2-ASN'
   paid: 'GeoIP2-ISP'
     

management:
  graphite:
    metrics:
      export:
        enabled: false # do not auto enable graphite
  endpoints:
    web:
      exposure:
        include: 'health,info,prometheus'
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true    
  endpoint:
    health:
      enabled: true
      probes:
        enabled: true
    heapdump:
      enabled: false
    logfile:
      enabled: false
       
       

